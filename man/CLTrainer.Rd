% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CL.R
\name{CLTrainer}
\alias{CLTrainer}
\title{CLTrainer}
\usage{
CLTrainer(
  data,
  PartitionRatios = c(0.7, 0.2, 0.1),
  BaseFunnelMeasure = NULL,
  ConversionMeasure = NULL,
  ConversionRateMeasure = NULL,
  CohortPeriodsVariable = NULL,
  CalendarDate = NULL,
  CohortDate = NULL,
  TruncateDate = NULL,
  TimeUnit = c("day"),
  CalendarTimeGroups = c("day", "week", "month"),
  CohortTimeGroups = c("day", "week", "month"),
  TransformTargetVariable = TRUE,
  TransformMethods = c("Identity", "YeoJohnson"),
  AnomalyDetection = list(tstat_high = 3, tstat_low = -2),
  Jobs = c("Evaluate", "Train"),
  SaveModelObjects = TRUE,
  ModelID = "Segment_ID",
  ModelPath = NULL,
  MetaDataPath = NULL,
  TaskType = "CPU",
  NumGPUs = 1,
  DT_Threads = max(1L, parallel::detectCores()),
  EvaluationMetric = "RMSE",
  LossFunction = "RMSE",
  NumOfParDepPlots = 1L,
  MetricPeriods = 50L,
  CalendarVariables = c("wday", "mday", "yday", "week", "isoweek", "month", "quarter",
    "year"),
  HolidayGroups = c("USPublicHolidays", "EasterGroup", "ChristmasGroup",
    "OtherEcclesticalFeasts"),
  ImputeRollStats = -0.001,
  CohortHolidayLags = c(1L, 2L, 7L),
  CohortHolidayMovingAverages = c(3L, 7L),
  CalendarHolidayLags = c(1L, 2L, 7L),
  CalendarHolidayMovingAverages = c(3L, 7L),
  CalendarLags = list(day = c(1L, 7L, 21L), week = c(1L, 4L, 52L), month = c(1L, 6L,
    12L)),
  CalendarMovingAverages = list(day = c(1L, 7L, 21L), week = c(1L, 4L, 52L), month =
    c(1L, 6L, 12L)),
  CalendarStandardDeviations = NULL,
  CalendarSkews = NULL,
  CalendarKurts = NULL,
  CalendarQuantiles = NULL,
  CalendarQuantilesSelected = "q50",
  CohortLags = list(day = c(1L, 7L, 21L), week = c(1L, 4L, 52L), month = c(1L, 6L,
    12L)),
  CohortMovingAverages = list(day = c(1L, 7L, 21L), week = c(1L, 4L, 52L), month =
    c(1L, 6L, 12L)),
  CohortStandardDeviations = NULL,
  CohortSkews = NULL,
  CohortKurts = NULL,
  CohortQuantiles = NULL,
  CohortQuantilesSelected = "q50",
  PassInGrid = NULL,
  GridTune = FALSE,
  BaselineComparison = "default",
  MaxModelsInGrid = 25L,
  MaxRunMinutes = 180L,
  MaxRunsWithoutNewWinner = 10L,
  Trees = 3000L,
  Depth = seq(4L, 8L, 1L),
  LearningRate = seq(0.01, 0.1, 0.01),
  L2_Leaf_Reg = seq(1, 10, 1),
  RSM = c(0.8, 0.85, 0.9, 0.95, 1),
  BootStrapType = c("Bayesian", "Bernoulli", "Poisson", "MVS", "No"),
  GrowPolicy = c("SymmetricTree", "Depthwise", "Lossguide")
)
}
\arguments{
\item{data}{data}

\item{PartitionRatios}{R}

\item{BaseFunnelMeasure}{E into the future. You should have two months into the future of values of BaseFunnelMeasure}

\item{ConversionMeasure}{E}

\item{ConversionRateMeasure}{C}

\item{CohortPeriodsVariable}{N}

\item{CalendarDate}{T}

\item{CohortDate}{T}

\item{TruncateDate}{N}

\item{TimeUnit}{B}

\item{CalendarTimeGroups}{T}

\item{CohortTimeGroups}{T}

\item{TransformTargetVariable}{T}

\item{TransformMethods}{C}

\item{AnomalyDetection}{P}

\item{Jobs}{D}

\item{SaveModelObjects}{S}

\item{ModelID}{A}

\item{ModelPath}{P}

\item{MetaDataPath}{P}

\item{TaskType}{t}

\item{NumGPUs}{N}

\item{DT_Threads}{N}

\item{EvaluationMetric}{T}

\item{LossFunction}{U}

\item{NumOfParDepPlots}{N}

\item{MetricPeriods}{N}

\item{CalendarVariables}{w}

\item{HolidayGroups}{c}

\item{ImputeRollStats}{C}

\item{CohortHolidayLags}{c}

\item{CohortHolidayMovingAverages}{c}

\item{CalendarHolidayLags}{c}

\item{CalendarHolidayMovingAverages}{c}

\item{CalendarLags}{L}

\item{CalendarMovingAverages}{L}

\item{CalendarStandardDeviations}{L}

\item{CalendarSkews}{L}

\item{CalendarKurts}{L}

\item{CalendarQuantiles}{L}

\item{CalendarQuantilesSelected}{S}

\item{CohortLags}{L}

\item{CohortMovingAverages}{L}

\item{CohortStandardDeviations}{L}

\item{CohortSkews}{L}

\item{CohortKurts}{L}

\item{CohortQuantiles}{L}

\item{CohortQuantilesSelected}{S}

\item{PassInGrid}{D}

\item{GridTune}{S}

\item{BaselineComparison}{S}

\item{MaxModelsInGrid}{N}

\item{MaxRunMinutes}{M}

\item{MaxRunsWithoutNewWinner}{N}

\item{Trees}{B}

\item{Depth}{B}

\item{LearningRate}{B}

\item{L2_Leaf_Reg}{R}

\item{RSM}{C}

\item{BootStrapType}{R}

\item{GrowPolicy}{R}

\item{TargetVariable}{T}

\item{MaxCohortPeriods}{T}

\item{ReturnModelObjects}{S}
}
\value{
S
}
\description{
CLTrainer is a forecasting model for chain ladder style forecasting
}
\seealso{
Other Automated Time Series: 
\code{\link{AutoCatBoostCARMA}()},
\code{\link{AutoCatBoostFreqSizeScoring}()},
\code{\link{AutoCatBoostSizeFreqDist}()},
\code{\link{AutoH2oDRFCARMA}()},
\code{\link{AutoH2oGBMCARMA}()},
\code{\link{AutoH2oGBMFreqSizeScoring}()},
\code{\link{AutoH2oGBMSizeFreqDist}()},
\code{\link{AutoH2oGLMCARMA}()},
\code{\link{AutoH2oMLCARMA}()},
\code{\link{AutoTS}()},
\code{\link{AutoXGBoostCARMA}()},
\code{\link{IntermittentDemandScoringDataGenerator}()},
\code{\link{PredictArima}()}
}
\author{
Adrian Antico
}
\concept{Automated Time Series}
