% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IntermittentDemandDataGeneratorFunctions.R
\name{IntermittentDemandDataGenerator}
\alias{IntermittentDemandDataGenerator}
\title{IntermittentDemandDataGenerator for frequency and size data sets}
\usage{
IntermittentDemandDataGenerator(data, RestrictDateRange = TRUE,
  Case = 2L, FC_Periods = 52, SaveData = FALSE, FilePath = NULL,
  TargetVariableName = "qty", DateVariableName = "date",
  GDL_Targets = NULL, TimeUnit = "raw", TimeGroups = c("raw", "day",
  "week"), GroupingVariables = "sku", HierarchyGroupVars = NULL,
  MinTimeWindow = 1, MinTxnRecords = 2, Lags = 1:7,
  MovingAverages = seq(7, 28, 7), TimeTrendVariable = TRUE,
  CalendarVariables = c("wday", "mday", "yday", "week", "isoweek",
  "month", "quarter", "year"), HolidayGroups = "USPublicHolidays",
  PowerRate = 0.5, SampleRate = 5, TargetWindowSamples = 5,
  PrintSteps = TRUE)
}
\arguments{
\item{data}{This is your transactional level data}

\item{RestrictDateRange}{Set to TRUE to only pull samples by entity within the entity life (not beyond)}

\item{Case}{Currently set as 1 for forecasting and 2 for other}

\item{FC_Periods}{The number of future periods to collect data on}

\item{SaveData}{Set to TRUE to save the MetaData and final modeling data sets to file}

\item{FilePath}{Set to your file of choice for where you want the data sets saved}

\item{TargetVariableName}{The name of your target variable that represents demand}

\item{DateVariableName}{The date variable of the demand instances}

\item{GDL_Targets}{The variable names to run through AutoLagRollStats()}

\item{TimeUnit}{List the time unit your data is aggregated by. E.g. "day", "week", "month", "quarter", "year"}

\item{GroupingVariables}{These variables (or sinlge variable) is the combination of categorical variables that uniquely defines the level of granularity of each individual level to forecast. E.g. "sku" or c("Store","Department"). Sku is typically unique for all sku's. Store and Department in combination defines all unique departments as the department may be repeated across the stores.}

\item{MinTimeWindow}{The number of time periods you would like to omit for training. Default is 1 so that at a minimum, there is at least one period of values to forecast. You can set it up to a larger value if you do not want more possible target windows for the lower target window values.}

\item{MinTxnRecords}{I typically set this to 2 so that there is at least one other instance of demand so that the forecasted values are not complete nonsense.}

\item{Lags}{Select the periods for all lag variables you want to create. E.g. c(1:5,52)}

\item{MovingAverages}{Select the periods for all moving average variables you want to create. E.g. c(1:5,52)}

\item{TimeTrendVariable}{Set to TRUE to have a time trend variable added to the model. Time trend is numeric variable indicating the numeric value of each record in the time series (by group). Time trend starts at 1 for the earliest point in time and increments by one for each success time point.}

\item{CalendarVariables}{Set to TRUE to have calendar variables created. The calendar variables are numeric representations of second, minute, hour, week day, month day, year day, week, isoweek, quarter, and year}

\item{HolidayGroups}{Input the holiday groups of your choice from the CreateHolidayVariable() function in this package}

\item{PowerRate}{}

\item{SampleRate}{Set this to a value greater than 0. The calculation used is the number of records per group level raised to the power of PowerRate. Then that values is multiplied by SampleRate.}

\item{PrintSteps}{Set to TRUE to have operation steps printed to the console}
}
\value{
Returns two data.table data sets: The first is a modeling data set for the count distribution while the second data set if for the size model data set.
}
\description{
IntermittentDemandDataGenerator for frequency and size data sets. This function generates count and size data sets for various future window sizes.
}
\examples{
\donttest{
DataSets <- IntermittentDemandDataGenerator(data,
                                            RestrictDateRange = TRUE,
                                            FC_Periods = 52,
                                            SaveData = FALSE,
                                            FilePath = NULL,
                                            TargetVariableName = "qty",
                                            DateVariableName = "date",
                                            GDL_Targets = NULL,
                                            GroupingVariables = "sku",
                                            MinTimeWindow = 1,
                                            MinTxnRecords = 2,
                                            Lags = 1:7,
                                            MovingAverages = seq(7,28,7),
                                            TimeTrendVariable = TRUE,
                                            TimeUnit = "day",
                                            CalendarVariables = c("wday",
                                                                  "mday",
                                                                  "yday",
                                                                  "week",
                                                                  "isoweek",
                                                                  "month",
                                                                  "quarter",
                                                                  "year"),
                                            HolidayGroups = "USPublicHolidays",
                                            PowerRate = 0.5,             
                                            SampleRate = 5,
                                            TargetWindowSamples = 5,
                                            PrintSteps = TRUE)
CountModelData <- DataSets$CountModelData
SizeModelData <- DataSets$SizeModelData
rm(DataSets)
}
}
\seealso{
Other Feature Engineering: \code{\link{AutoDataPartition}},
  \code{\link{AutoLagRollStatsScoring}},
  \code{\link{AutoLagRollStats}},
  \code{\link{AutoTransformationCreate}},
  \code{\link{AutoTransformationScore}},
  \code{\link{AutoWord2VecModeler}},
  \code{\link{CreateCalendarVariables}},
  \code{\link{CreateHolidayVariables}},
  \code{\link{DT_GDL_Feature_Engineering}},
  \code{\link{DummifyDT}}, \code{\link{ModelDataPrep}},
  \code{\link{Partial_DT_GDL_Feature_Engineering}},
  \code{\link{TimeSeriesFill}}
}
\author{
Adrian Antico
}
\concept{Feature Engineering}
