% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AutoH2oGLMRegression.R
\name{AutoH2oGLMRegression}
\alias{AutoH2oGLMRegression}
\title{AutoH2oGLMRegression}
\usage{
AutoH2oGLMRegression(
  OutputSelection = c("EvalMetrics", "PDFs", "Score_TrainData"),
  data = NULL,
  TrainOnFull = FALSE,
  ValidationData = NULL,
  TestData = NULL,
  TargetColumnName = NULL,
  FeatureColNames = NULL,
  RandomColNumbers = NULL,
  InteractionColNumbers = NULL,
  WeightsColumn = NULL,
  MaxMem = {     gc()    
    paste0(as.character(floor(as.numeric(system("awk '/MemFree/ {print $2}' /proc/meminfo",
    intern = TRUE))/1000000)), "G") },
  NThreads = max(1, parallel::detectCores() - 2),
  ModelID = "FirstModel",
  ReturnModelObjects = TRUE,
  model_path = NULL,
  metadata_path = NULL,
  SaveModelObjects = FALSE,
  SaveInfoToPDF = FALSE,
  IfSaveModel = "mojo",
  H2OShutdown = TRUE,
  H2OStartUp = TRUE,
  DebugMode = FALSE,
  TransformNumericColumns = NULL,
  Methods = c("BoxCox", "Asinh", "Log", "LogPlus1", "Sqrt", "Asin", "Logit"),
  NumOfParDepPlots = 3,
  GridTune = FALSE,
  GridStrategy = "Cartesian",
  StoppingRounds = 10,
  MaxRunTimeSecs = 3600 * 24 * 7,
  MaxModelsInGrid = 2,
  Distribution = "gaussian",
  Link = "identity",
  TweedieLinkPower = NULL,
  TweedieVariancePower = NULL,
  eval_metric = "RMSE",
  RandomDistribution = NULL,
  RandomLink = NULL,
  Solver = "AUTO",
  Alpha = 0.5,
  Lambda = NULL,
  LambdaSearch = FALSE,
  NLambdas = -1,
  Standardize = TRUE,
  RemoveCollinearColumns = FALSE,
  InterceptInclude = TRUE,
  NonNegativeCoefficients = FALSE
)
}
\arguments{
\item{OutputSelection}{You can select what type of output you want returned. Choose from c("EvalMetrics", "PDFs", "Score_TrainData")}

\item{data}{This is your data set for training and testing your model}

\item{TrainOnFull}{Set to TRUE to train on full data}

\item{ValidationData}{This is your holdout data set used in modeling either refine your hyperparameters.}

\item{TestData}{This is your holdout data set. Catboost using both training and validation data in the training process so you should evaluate out of sample performance with this data set.}

\item{TargetColumnName}{Either supply the target column name OR the column number where the target is located (but not mixed types).}

\item{FeatureColNames}{Either supply the feature column names OR the column number where the target is located (but not mixed types)}

\item{RandomColNumbers}{Random effects column number indicies}

\item{InteractionColNumbers}{Column numbers of the features you want to be pairwise interacted}

\item{WeightsColumn}{Column name of a weights column}

\item{MaxMem}{Set the maximum amount of memory you'd like to dedicate to the model run. E.g. "32G"}

\item{NThreads}{Set the number of threads you want to dedicate to the model building}

\item{ModelID}{A character string to name your model and output}

\item{ReturnModelObjects}{Set to TRUE to output all modeling objects (E.g. plots and evaluation metrics)}

\item{model_path}{A character string of your path file to where you want your output saved}

\item{metadata_path}{A character string of your path file to where you want your model evaluation output saved. If left NULL, all output will be saved to model_path.}

\item{SaveModelObjects}{Set to TRUE to return all modeling objects to your environment}

\item{SaveInfoToPDF}{Set to TRUE to save insights to PDF}

\item{IfSaveModel}{Set to "mojo" to save a mojo file, otherwise "standard" to save a regular H2O model object}

\item{H2OShutdown}{Set to TRUE to shutdown H2O inside the function}

\item{H2OStartUp}{Defaults to TRUE which means H2O will be started inside the function}

\item{DebugMode}{Set to TRUE to print out steps to screen}

\item{TransformNumericColumns}{Set to NULL to do nothing; otherwise supply the column names of numeric variables you want transformed}

\item{Methods}{Choose from "YeoJohnson", "BoxCox", "Asinh", "Log", "LogPlus1", "Sqrt", "Asin", or "Logit". If more than one is selected, the one with the best normalization pearson statistic will be used. Identity is automatically selected and compared.}

\item{NumOfParDepPlots}{Tell the function the number of partial dependence calibration plots you want to create. Calibration boxplots will only be created for numerical features (not dummy variables)}

\item{GridTune}{Set to TRUE to run a grid tuning procedure. Set a number in MaxModelsInGrid to tell the procedure how many models you want to test.}

\item{GridStrategy}{"RandomDiscrete" or "Cartesian"}

\item{StoppingRounds}{Iterations in grid tuning}

\item{MaxRunTimeSecs}{Max run time in seconds}

\item{MaxModelsInGrid}{Number of models to test from grid options (1080 total possible options)}

\item{Distribution}{"AUTO", "gaussian", "poisson", "gamma", "tweedie", "negativebinomial"}

\item{Link}{"family_default", "identity", "log", "inverse", "tweedie"}

\item{TweedieLinkPower}{See h2o docs for background}

\item{TweedieVariancePower}{See h2o docs for background}

\item{eval_metric}{This is the metric used to identify best grid tuned model. Choose from "MSE", "RMSE", "MAE", "RMSLE"}

\item{RandomDistribution}{Random effects family. Defaults NULL, otherwise it will run a hierarchical glm}

\item{RandomLink}{Random effects link. Defaults NULL, otherwise it will run a hierarchical glm}

\item{Solver}{Default "AUTO". Options include "IRLSM", "L_BFGS", "COORDINATE_DESCENT_NAIVE", "COORDINATE_DESCENT", "GRADIENT_DESCENT_LH", "GRADIENT_DESCENT_SQERR"}

\item{Alpha}{Default 0.5 Otherwise supply a value between 0 and 1. 1 is equivalent to Lasso regression. 0 is equivalent to Ridge regression. Inbetween for a blend of the two.}

\item{Lambda}{Default NULL. Regularization strength.}

\item{LambdaSearch}{Default FALSE.}

\item{NLambdas}{Default -1}

\item{Standardize}{Default TRUE. Standardize numerical columns}

\item{RemoveCollinearColumns}{Default FALSE. Removes some of the linearly dependent columns}

\item{InterceptInclude}{Default TRUE}

\item{NonNegativeCoefficients}{Default FALSE}
}
\value{
Saves to file and returned in list: VariableImportance.csv, Model, ValidationData.csv, EvalutionPlot.png, EvalutionBoxPlot.png, EvaluationMetrics.csv, ParDepPlots.R a named list of features with partial dependence calibration plots, ParDepBoxPlots.R, GridCollect, GridList, and Transformation metadata
}
\description{
AutoH2oGLMis an automated H2O modeling framework with grid-tuning and model evaluation that runs a variety of steps. First, the function will run a random grid tune over N number of models and find which model is the best (a default model is always included in that set). Once the model is identified and built, several other outputs are generated: validation data with predictions, evaluation plot, evaluation boxplot, evaluation metrics, variable importance, partial dependence calibration plots, partial dependence calibration box plots, and column names used in model fitting.
}
\examples{
\donttest{
# Create some dummy correlated data
data <- RemixAutoML::FakeDataGenerator(
  Correlation = 0.85,
  N = 1000,
  ID = 2,
  ZIP = 0,
  AddDate = FALSE,
  Classification = FALSE,
  MultiClass = FALSE)

# Run function
TestModel <- RemixAutoML::AutoH2oGLMRegression(

    # Compute management
    MaxMem = {gc();paste0(as.character(floor(as.numeric(system("awk '/MemFree/ {print $2}' /proc/meminfo", intern=TRUE)) / 1000000)),"G")},
    NThreads = max(1, parallel::detectCores()-2),
    H2OShutdown = TRUE,
    H2OStartUp = TRUE,
    IfSaveModel = "mojo",

    # Model evaluation:
    eval_metric = "RMSE",
    NumOfParDepPlots = 3,

    # Metadata arguments
    OutputSelection = c("EvalMetrics", "PDFs", "Score_TrainData"),
    model_path = NULL,
    metadata_path = NULL,
    ModelID = "FirstModel",
    ReturnModelObjects = TRUE,
    SaveModelObjects = FALSE,
    SaveInfoToPDF = FALSE,
    DebugMode = FALSE,

    # Data arguments:
    data = data,
    TrainOnFull = FALSE,
    ValidationData = NULL,
    TestData = NULL,
    TargetColumnName = "Adrian",
    FeatureColNames = names(data)[!names(data) \%in\%
      c("IDcol_1", "IDcol_2","Adrian")],
    RandomColNumbers = NULL,
    InteractionColNumbers = NULL,
    WeightsColumn = NULL,
    TransformNumericColumns = NULL,
    Methods = c("BoxCox", "Asinh", "Asin", "Log", "LogPlus1", "Sqrt", "Logit", "YeoJohnson"),

    # Model args
    GridTune = FALSE,
    GridStrategy = "Cartesian",
    StoppingRounds = 10,
    MaxRunTimeSecs = 3600 * 24 * 7,
    MaxModelsInGrid = 10,
    Distribution = "gaussian",
    Link = "identity",
    TweedieLinkPower = NULL,
    TweedieVariancePower = NULL,
    RandomDistribution = NULL,
    RandomLink = NULL,
    Solver = "AUTO",
    Alpha = 0.5,
    Lambda = NULL,
    LambdaSearch = FALSE,
    NLambdas = -1,
    Standardize = TRUE,
    RemoveCollinearColumns = FALSE,
    InterceptInclude = TRUE,
    NonNegativeCoefficients = FALSE)
}
}
\seealso{
Other Automated Supervised Learning - Regression: 
\code{\link{AutoCatBoostRegression}()},
\code{\link{AutoH2oDRFRegression}()},
\code{\link{AutoH2oGAMRegression}()},
\code{\link{AutoH2oGBMRegression}()},
\code{\link{AutoH2oMLRegression}()},
\code{\link{AutoNLS}()},
\code{\link{AutoXGBoostRegression}()}
}
\author{
Adrian Antico
}
\concept{Automated Supervised Learning - Regression}
