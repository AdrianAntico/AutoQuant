% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Adrian_Antico_Modeling_Tools_Library.R
\name{DT_GDL_Feature_Engineering}
\alias{DT_GDL_Feature_Engineering}
\title{An Automated Feature Engineering Function Using data.table frollmean}
\usage{
DT_GDL_Feature_Engineering(data, lags = c(seq(1, 5, 1)), periods = c(3,
  5, 10, 15, 20, 25), statsNames = c("MA3", "MA5", "MA10", "MA15",
  "MA20", "MA25"), targets = c("qty"), groupingVars = c("Group1",
  "Group2"), sortDateName = "date", timeDiffTarget = c("TimeDiffName"),
  timeAgg = c("auto", "secs", "mins", "hours", "days", "weeks"),
  WindowingLag = 0, Type = c("Lag", "Lead"), Timer = TRUE,
  SkipCols = NULL, SimpleImpute = TRUE)
}
\arguments{
\item{data}{Core instruction file for automation}

\item{lags}{The ceiling amount of memory H20 will utilize}

\item{statsNames}{The corresponding names to append to your colnames created associated with statsFuns}

\item{targets}{The column(s) in which you will build your lags and rolling stats}

\item{groupingVars}{Categorical variables you will build your lags and rolling stats by}

\item{sortDateName}{String name of your core date column in your transaction data}

\item{timeDiffTarget}{List a name in order to create time between events with assiciated lags and rolling features}

\item{timeAgg}{Unit of time to aggregate by}

\item{WindowingLag}{Build moving stats off of target column(s) or one of their lags (1+)}

\item{Type}{input "Lag" if you want features built on historical values; use "Lead" if you want features built on future values}

\item{Timer}{Set to TRUE if you want a time run for the operation; useful when there is grouping}

\item{SkipCols}{Defaults to NULL; otherwise name the vector containing the names of columns to skip}

\item{SimpleImpute}{Set to TRUE for factor level imputation of "0" and numeric imputation of -1}
}
\value{
data.table of original data plus newly created features
}
\description{
Builds autoregressive and moving average from target columns and distributed lags and distributed moving average for independent features distributed across time. On top of that, you can also create time between instances along with their associated lags and moving averages. This function works for data with groups and without groups.
}
\examples{
quick_model <- DT_GDL_Feature_Engineering(quick_model,
                                          lags           = c(seq(1,5,1)),
                                          periods        = c(3,5,10,15,20,25),
                                          statsNames     = c("min","max","mean","sd","q20","q80"),
                                          targets        = c("qty","price"),
                                          groupingVars   = c("SKU","VENDOR_NAME"),
                                          sortDateName   = "RECEIPT_DATE",
                                          timeDiffTarget = c("ISSUE_GAP"),
                                          timeAgg        = c("auto","secs","mins","hours","days","weeks"),
                                          WindowingLag   = 0,
                                          Type           = "Lag",
                                          Timer          = TRUE,
                                          SkipCols       = FALSE,
                                          SimpleImpute   = TRUE)
}
\author{
Adrian Antico
}
