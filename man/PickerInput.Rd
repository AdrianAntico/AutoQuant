% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ShinyFunctions.R
\name{PickerInput}
\alias{PickerInput}
\title{PickerInput}
\usage{
PickerInput(
  InputID = "TS_CARMA_HolidayMovingAverages",
  Label = "Select Holiday Count MA's",
  Choices = as.character(0:50),
  SelectedDefault = as.character(c(1, 2)),
  Size = 10,
  SelectedText = "count > 1",
  Multiple = TRUE,
  ActionBox = TRUE
)
}
\arguments{
\item{InputID}{Feeds ProjectList and inputId. Argument saved in ProjectList}

\item{Label}{Feeds label}

\item{Choices}{Feeds choices}

\item{SelectedDefault}{Feeds selected for cases where ProjectList has a null element}

\item{Size}{Feeds size in the options list}

\item{SelectedText}{Feeds selected-text-format in options list}

\item{Multiple}{Feeds multiple for enabling selecting more than one element from list}

\item{ActionBox}{Feeds actions-box for option list}
}
\value{
PickerInput object for server.R to go into renderUI({PickerInput()})
}
\description{
PickerInput automatically builds a picker input with tryCatch's and ProjectList argument usage if it exists
}
\examples{
\dontrun{
output$TS_CARMA_HolidayMovingAverages <- renderUI({
  RemixAutoML::PickerInput(InputID = "TS_CARMA_HolidayMovingAverages", Label = "Select Holiday Count MA's", Choices = as.character(0:50),
                           SelectedDefault = as.character(c(1,2)), Size = 10, SelectedText = "count > 1", Multiple = TRUE, ActionBox = TRUE)})
}
}
\seealso{
Other Shiny: 
\code{\link{AppsPlotting}()},
\code{\link{ArgNullCheck2}()},
\code{\link{ArgNullCheck}()},
\code{\link{BlankRow}()},
\code{\link{DateInput}()},
\code{\link{GenerateEvaluationMetrics}()},
\code{\link{NumericInput}()},
\code{\link{PickerInput_GetLevels}()},
\code{\link{PreparePlotData}()},
\code{\link{ReactiveLoadCSV}()},
\code{\link{ReturnParam}()},
\code{\link{StoreArgs}()},
\code{\link{TextInput}()},
\code{\link{observeEventLoad}()}
}
\author{
Adrian Antico
}
\concept{Shiny}
