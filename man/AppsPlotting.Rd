% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SimpleApps.R
\name{AppsPlotting}
\alias{AppsPlotting}
\title{Apps_Plotting}
\usage{
AppsPlotting(
  data,
  XVariable = NULL,
  YVariable = NULL,
  DateName = NULL,
  GroupVariables = NULL,
  FilterVariable = NULL,
  AppTitle = "Time Series Plotting",
  AppWidth = 12L,
  LogoWidth = "1000px",
  LogoHeight = "100px",
  Box1Color = "navy",
  Box2Color = "purple",
  Box3Color = "aqua",
  CreatePlotButtonColor = "default",
  UpdatePlotButtonColor = "default",
  ResetPlotButtonColor = "default",
  Debug = FALSE
)
}
\arguments{
\item{data}{Source data.table}

\item{XVariable}{Starter column name for x-variable. Not needed if x-axis is the DateName column}

\item{YVariable}{Starter column name for y-variable}

\item{DateName}{Starter column name for date-variable}

\item{GroupVariables}{Starter column name for group-variables}

\item{FilterVariable}{Starter column name for filter-variable}

\item{AppTitle}{Defaults to 'Time Series Plotting'}

\item{AppWidth}{Width of boxes}

\item{Box1Color}{Choose from 'red', 'yellow', 'aqua', 'blue', 'light-blue', 'green', 'navy', 'teal', 'olive', 'lime', 'orange', 'fuchsia', 'purple', 'maroon', 'black'}

\item{Box2Color}{Choose from 'red', 'yellow', 'aqua', 'blue', 'light-blue', 'green', 'navy', 'teal', 'olive', 'lime', 'orange', 'fuchsia', 'purple', 'maroon', 'black'}

\item{Box3Color}{Choose from 'red', 'yellow', 'aqua', 'blue', 'light-blue', 'green', 'navy', 'teal', 'olive', 'lime', 'orange', 'fuchsia', 'purple', 'maroon', 'black'}

\item{CreatePlotButtonColor}{Choose from 'default', 'primary', 'warning', 'danger', 'success', 'royal'}

\item{UpdatePlotButtonColor}{Choose from 'default', 'primary', 'warning', 'danger', 'success', 'royal'}

\item{ResetPlotButtonColor}{Choose from 'default', 'primary', 'warning', 'danger', 'success', 'royal'}

\item{Debug}{FALSE}
}
\description{
Simple shiny app for viewing time series plots with box plots or line plots. You can use up to 3 categorical variables to filter by and one additional variable to filter as a bonus. You'll need to have shiny, shinyWidgets, htmltools
}
\examples{
\dontrun{
# Pull Data
data <- data.table::fread(system.file('tests/QA_DataSets/ThreeGroup-FC-Walmart-XREG3.csv', package = "RemixAutoML"))
data[, Date := as.Date(Date)]

# Run App
RemixAutoML::Apps_Plotting(
  data,
  XVariable = 'Date',
  YVariable = 'XREG1',
  DateName = 'Date',
  FilterVariable = 'XREG1',
  GroupVariables = names(data)[seq_len(3L)],
  AppTitle = 'Time Series Plotting',
  AppWidth = 12L,
  LogoWidth = '1000px',
  LogoHeight = '100px',
  Box1Color = 'navy',
  Box2Color = 'purple',
  Box3Color = 'aqua',
  CreatePlotButtonColor = 'default',
  UpdatePlotButtonColor = 'default',
  ResetPlotButtonColor = 'default',
  Debug = TRUE)

# XVariable = 'Date'
# YVariable = 'XREG1'
# DateName = 'Date'
# GroupVariables = names(data)[seq_len(3L)]
# FilterVariable = 'XREG1'
# Debug = TRUE
# AppWidth = 12L,
# LogoWidth = '1000px',
# LogoHeight = '100px',
# Box1Color = 'navy',
# Box2Color = 'purple',
# Box3Color = 'aqua',
# CreatePlotButtonColor = 'default',
# UpdatePlotButtonColor = 'default',
# ResetPlotButtonColor = 'default',
# Debug = TRUE
}

}
\seealso{
Other Shiny: 
\code{\link{ArgNullCheck2}()},
\code{\link{ArgNullCheck}()},
\code{\link{BlankRow}()},
\code{\link{DateInput}()},
\code{\link{GenerateEvaluationMetrics}()},
\code{\link{NumericInput}()},
\code{\link{PickerInput_GetLevels}()},
\code{\link{PickerInput}()},
\code{\link{PreparePlotData}()},
\code{\link{ReactiveLoadCSV}()},
\code{\link{ReturnParam}()},
\code{\link{StoreArgs}()},
\code{\link{TextInput}()},
\code{\link{observeEventLoad}()}
}
\author{
Adrian Antico
}
\concept{Shiny}
