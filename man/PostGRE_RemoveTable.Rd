% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SQL_Functions.R
\name{PostGRE_RemoveTable}
\alias{PostGRE_RemoveTable}
\title{PostGRE_RemoveTable}
\usage{
PostGRE_RemoveTable(
  TableName = NULL,
  Connection = NULL,
  CloseConnection = FALSE,
  Host = NULL,
  DBName = NULL,
  User = NULL,
  Port = NULL,
  Password = NULL
)
}
\arguments{
\item{TableName}{Name of table you want created}

\item{Connection}{NULL. If supplied, use this: Connection <- DBI::dbConnect(RPostgres::Postgres(), host = Host, dbname = DBName, user = User, port = Port, password = Password)}

\item{CloseConnection}{= FALSE}

\item{Host}{If Connection is NULL then this must be supplied. Host name}

\item{DBName}{If Connection is NULL then this must be supplied. database name}

\item{User}{If Connection is NULL then this must be supplied. user name}

\item{Port}{If Connection is NULL then this must be supplied. port name}

\item{Password}{If Connection is NULL then this must be supplied. user password}
}
\description{
PostGRE_RemoveTable will DROP the table specified
}
\examples{
\dontrun{
AutoQuant::PostGRE_RemoveTable(
  TableName = 'static_data',
  Connection = NULL,
  CloseConnection = FALSE,
  Host = 'localhost',
  DBName = 'Testing',
  User = 'postgres',
  Port = 5432,
  Password = 'Aa...')

# Host = 'localhost'
# TableName = 'static_data'
# Connection = NULL
# DBName = 'Testing'
# User = 'postgres'
# Port = 5432
# Password = 'Aa...'
}

}
\seealso{
Other Database: 
\code{\link{AutoDataDictionaries}()},
\code{\link{PostGRE_AppendData}()},
\code{\link{PostGRE_CreateTable}()},
\code{\link{PostGRE_GetTableNames}()},
\code{\link{PostGRE_ListTables}()},
\code{\link{PostGRE_Query}()},
\code{\link{PostGRE_RemoveCreateAppend}()},
\code{\link{PosteGRE_CreateDatabase}()},
\code{\link{PosteGRE_DropDB}()},
\code{\link{PosteGRE_ListDatabases}()},
\code{\link{SQL_ClearTable}()},
\code{\link{SQL_DropTable}()},
\code{\link{SQL_Query_Push}()},
\code{\link{SQL_Query}()},
\code{\link{SQL_SaveTable}()},
\code{\link{SQL_Server_DBConnection}()}
}
\author{
Adrian Antico
}
\concept{Database}
