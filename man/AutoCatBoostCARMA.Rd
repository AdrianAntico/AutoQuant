% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AutoCatBoostCARMA.R
\name{AutoCatBoostCARMA}
\alias{AutoCatBoostCARMA}
\title{AutoCatBoostCARMA}
\usage{
AutoCatBoostCARMA(
  data,
  NonNegativePred = FALSE,
  TrainOnFull = FALSE,
  TargetColumnName = "Target",
  DateColumnName = "DateTime",
  HierarchGroups = NULL,
  GroupVariables = NULL,
  FC_Periods = 30,
  TimeUnit = "week",
  TimeGroups = c("weeks", "months"),
  TargetTransformation = FALSE,
  Methods = c("BoxCox", "Asinh", "Asin", "Log", "LogPlus1", "Logit", "YeoJohnson"),
  XREGS = NULL,
  Lags = c(1L:5L),
  MA_Periods = c(2L:5L),
  SD_Periods = NULL,
  Skew_Periods = NULL,
  Kurt_Periods = NULL,
  Quantile_Periods = NULL,
  Quantiles_Selected = c("q5", "q95"),
  Difference = TRUE,
  FourierTerms = 6L,
  CalendarVariables = TRUE,
  HolidayVariable = TRUE,
  HolidayLags = 1L,
  HolidayMovingAverages = 1L:2L,
  TimeTrendVariable = FALSE,
  ZeroPadSeries = NULL,
  DataTruncate = FALSE,
  SplitRatios = c(0.7, 0.2, 0.1),
  TaskType = "GPU",
  NumGPU = 1,
  EvalMetric = "RMSE",
  GridTune = FALSE,
  GridEvalMetric = "mae",
  ModelCount = 1,
  NTrees = 1000,
  PartitionType = "timeseries",
  Timer = TRUE,
  DebugMode = FALSE
)
}
\arguments{
\item{data}{Supply your full series data set here}

\item{NonNegativePred}{TRUE or FALSE}

\item{TrainOnFull}{Set to TRUE to train on full data}

\item{TargetColumnName}{List the column name of your target variables column. E.g. "Target"}

\item{DateColumnName}{List the column name of your date column. E.g. "DateTime"}

\item{HierarchGroups}{Vector of hierachy categorical columns.}

\item{GroupVariables}{Defaults to NULL. Use NULL when you have a single series. Add in GroupVariables when you have a series for every level of a group or multiple groups.}

\item{FC_Periods}{Set the number of periods you want to have forecasts for. E.g. 52 for weekly data to forecast a year ahead}

\item{TimeUnit}{List the time unit your data is aggregated by. E.g. "1min", "5min", "10min", "15min", "30min", "hour", "day", "week", "month", "quarter", "year".}

\item{TimeGroups}{Select time aggregations for adding various time aggregated GDL features.}

\item{TargetTransformation}{Run AutoTransformationCreate() to find best transformation for the target variable. Tests YeoJohnson, BoxCox, and Asigh (also Asin and Logit for proportion target variables).}

\item{Methods}{Transformation options to test which include "BoxCox", "Asinh", "Asin", "Log", "LogPlus1", "Logit", "YeoJohnson"}

\item{XREGS}{Additional data to use for model development and forecasting. Data needs to be a complete series which means both the historical and forward looking values over the specified forecast window needs to be supplied.}

\item{Lags}{Select the periods for all lag variables you want to create. E.g. c(1:5,52)}

\item{MA_Periods}{Select the periods for all moving average variables you want to create. E.g. c(1:5,52)}

\item{SD_Periods}{Select the periods for all moving standard deviation variables you want to create. E.g. c(1:5,52)}

\item{Skew_Periods}{Select the periods for all moving skewness variables you want to create. E.g. c(1:5,52)}

\item{Kurt_Periods}{Select the periods for all moving kurtosis variables you want to create. E.g. c(1:5,52)}

\item{Quantile_Periods}{Select the periods for all moving quantiles variables you want to create. E.g. c(1:5,52)}

\item{Quantiles_Selected}{Select from the following c("q5","q10","q15","q20","q25","q30","q35","q40","q45","q50","q55","q60","q65","q70","q75","q80","q85","q90","q95")}

\item{Difference}{Puts the I in ARIMA for single series and grouped series.}

\item{FourierTerms}{Set to the max number of pairs. E.g. 2 means to generate two pairs for by each group level and interations if hierarchy is enabled.}

\item{CalendarVariables}{Set to TRUE to have calendar variables created. The calendar variables are numeric representations of second, minute, hour, week day, month day, year day, week, isoweek, quarter, and year}

\item{HolidayVariable}{Set to TRUE to have a holiday counter variable created.}

\item{HolidayLags}{Number of lags to build off of the holiday count variable.}

\item{HolidayMovingAverages}{Number of moving averages to build off of the holiday count variable.}

\item{TimeTrendVariable}{Set to TRUE to have a time trend variable added to the model. Time trend is numeric variable indicating the numeric value of each record in the time series (by group). Time trend starts at 1 for the earliest point in time and increments by one for each success time point.}

\item{ZeroPadSeries}{Set to "all", "inner", or NULL. See TimeSeriesFill for explanation}

\item{DataTruncate}{Set to TRUE to remove records with missing values from the lags and moving average features created}

\item{SplitRatios}{E.g c(0.7,0.2,0.1) for train, validation, and test sets}

\item{TaskType}{Default is "GPU" but you can also set it to "CPU"}

\item{NumGPU}{Defaults to 1. If CPU is set this argument will be ignored.}

\item{EvalMetric}{Select from "RMSE", "MAE", "MAPE", "Poisson", "Quantile", "LogLinQuantile", "Lq", "NumErrors", "SMAPE", "R2", "MSLE", "MedianAbsoluteError"}

\item{GridTune}{Set to TRUE to run a grid tune}

\item{GridEvalMetric}{This is the metric used to find the threshold 'poisson', 'mae', 'mape', 'mse', 'msle', 'kl', 'cs', 'r2'}

\item{ModelCount}{Set the number of models to try in the grid tune}

\item{NTrees}{Select the number of trees you want to have built to train the model}

\item{PartitionType}{Select "random" for random data partitioning "time" for partitioning by time frames}

\item{Timer}{Set to FALSE to turn off the updating print statements for progress}

\item{DebugMode}{Defaults to FALSE. Set to TRUE to get a print statement of each high level comment in function}
}
\value{
Returns a data.table of original series and forecasts, the catboost model objects (everything returned from AutoCatBoostRegression()), a time series forecast plot, and transformation info if you set TargetTransformation to TRUE. The time series forecast plot will plot your single series or aggregate your data to a single series and create a plot from that.
}
\description{
AutoCatBoostCARMA Mutlivariate Forecasting with calendar variables, Holiday counts, holiday lags, holiday moving averages, differencing, transformations, interaction-based categorical encoding using target variable and features to generate various time-based aggregated lags, moving averages, moving standard deviations, moving skewness, moving kurtosis, moving quantiles, parallelized interaction-based fourier pairs by grouping variables, and Trend Variables.
}
\examples{
\donttest{

 # Pull in Walmart Data Set
 data <- data.table::fread("https://www.dropbox.com/s/2str3ek4f4cheqi/walmart_train.csv?dl=1")
 data <- data[, Counts := .N, by = c("Store","Dept")][Counts == 143][, Counts := NULL]
 data <- data[, .SD, .SDcols = c("Store","Dept","Date","Weekly_Sales")]

 # Build forecast
 CatBoostResults <- RemixAutoML::AutoCatBoostCARMA(

  # data
  data = data, # TwoGroup_Data,
  NonNegativePred = FALSE,
  TargetColumnName = "Weekly_Sales",
  DateColumnName = "Date",
  HierarchGroups = NULL,
  GroupVariables = c("Store","Dept"),
  TimeUnit = "weeks",
  TimeGroups = c("weeks"),

  # Productionize
  TrainOnFull = FALSE,
  SplitRatios = c(1 - 10 / 143, 10 / 143),
  FC_Periods = 4,
  EvalMetric = "RMSE",
  GridTune = FALSE,
  GridEvalMetric = "mae",
  ModelCount = 5,
  TaskType = "GPU",
  NumGPU = 1,
  Timer = TRUE,
  DebugMode = TRUE,

  # Target Transformations
  TargetTransformation = TRUE,
  Methods = c("BoxCox", "Asinh", "Asin", "Log", "LogPlus1", "Logit", "YeoJohnson"),
  Difference = FALSE, #TRUE,

  # Date Features
  CalendarVariables = TRUE,
  HolidayVariable = TRUE,
  HolidayLags = 1,
  HolidayMovingAverages = 1:2,

  # Time Series Features
  Lags = list("days" = seq(1L, 10L, 1L), "weeks" = seq(1L, 5L, 1L)),
  MA_Periods = list("days" = seq(5L, 20L, 5L), "weeks" = seq(2L, 10L, 2L)),
  SD_Periods = NULL,
  Skew_Periods = NULL,
  Kurt_Periods = NULL,
  Quantile_Periods = NULL,
  Quantiles_Selected = c("q5","q95"),

  # Bonus Features
  XREGS = NULL,
  FourierTerms = 4,
  TimeTrendVariable = TRUE,
  NTrees = 2500,
  ZeroPadSeries = NULL,
  DataTruncate = FALSE,
  PartitionType = "random")

UpdateMetrics <- print(CatBoostResults$ModelInformation$EvaluationMetrics[Metric == "MSE", MetricValue := sqrt(MetricValue)])
print(UpdateMetrics)
CatBoostResults$ModelInformation$EvaluationMetricsByGroup[order(-R2_Metric)]
CatBoostResults$ModelInformation$EvaluationMetricsByGroup[order(MAE_Metric)]
CatBoostResults$ModelInformation$EvaluationMetricsByGroup[order(MSE_Metric)]
CatBoostResults$ModelInformation$EvaluationMetricsByGroup[order(MAPE_Metric)]
}
}
\seealso{
Other Automated Time Series: 
\code{\link{AutoCatBoostFreqSizeScoring}()},
\code{\link{AutoCatBoostSizeFreqDist}()},
\code{\link{AutoH2oDRFCARMA}()},
\code{\link{AutoH2oGBMCARMA}()},
\code{\link{AutoH2oGBMFreqSizeScoring}()},
\code{\link{AutoH2oGBMSizeFreqDist}()},
\code{\link{AutoH2oGLMCARMA}()},
\code{\link{AutoH2oMLCARMA}()},
\code{\link{AutoTS}()},
\code{\link{AutoXGBoostCARMA}()},
\code{\link{CLTrainer}()},
\code{\link{IntermittentDemandScoringDataGenerator}()},
\code{\link{PredictArima}()}
}
\author{
Adrian Antico
}
\concept{Automated Time Series}
